<Window x:Class="PlayCanvasGitConnector.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PlayCanvasGitConnector"
        mc:Ignorable="d"
        Title="MainWindow" Height="1000" Width="700"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ColorPallette.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </Window.Resources>

    <Grid Background="{StaticResource PlayCanvasBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- StackPanel for Input -->
        <StackPanel Grid.Row="0" Margin="10, 0, 10, 0">
            <Label Content="API Token:" Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBox 
                x:Name="ApiTokenTextBox" 
                Text="{Binding APIKeyToken, UpdateSourceTrigger=PropertyChanged}"
                Background="{StaticResource PlayCanvasSidebar}" 
                Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBlock Text="Found in PlayCanvas account settings." 
                       Margin="0, 0, 0, 0" 
                       IsHitTestVisible="False" 
                       FontSize="10" 
                       Foreground="{StaticResource PlayCanvasSecondaryGray}"/>

            <Label Content="Project ID:" Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBox 
                x:Name="ProjectIDTextBox" 
                Text="{Binding ProjectId, UpdateSourceTrigger=PropertyChanged}"
                Background="{StaticResource PlayCanvasSidebar}" 
                Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBlock Text="Found in the browser URL when the project is open in the HUB." 
                       Margin="0, 0, 0, 0" 
                       IsHitTestVisible="False" 
                       FontSize="10" 
                       Foreground="{StaticResource PlayCanvasSecondaryGray}"/>

            <Label Content="Branch ID:" Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBox 
                x:Name="BranchIDTextBox" 
                Text="{Binding BranchId, UpdateSourceTrigger=PropertyChanged}"
                Background="{StaticResource PlayCanvasSidebar}" 
                Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBlock Text="(Optional) Found in the source control page. Main branch used by default." 
                       Margin="0, 0, 0, 0" 
                       IsHitTestVisible="False" 
                       FontSize="10" 
                       Foreground="{StaticResource PlayCanvasSecondaryGray}"/>

            <Label Content="Scene ID:" Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBox 
                x:Name="SceneIDTextBox" 
                Text="{Binding ScenesIds, UpdateSourceTrigger=PropertyChanged}"
                Background="{StaticResource PlayCanvasSidebar}" 
                Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBlock Text="Found in the browser URL when the scene is open in the editor." 
                       Margin="0, 0, 0, 0" 
                       IsHitTestVisible="False" 
                       FontSize="10" 
                       Foreground="{StaticResource PlayCanvasSecondaryGray}"/>

            <!-- Directory selection-->
            <Label Content="Project Destination:" Foreground="{StaticResource PlayCanvasWhite}"/>
            <Grid Margin="0, 0, 0, 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox x:Name="DirectoryTextBox" 
                 Text="{Binding DirectoryPath, UpdateSourceTrigger=PropertyChanged}" 
                 VerticalAlignment="Center" 
                 HorizontalAlignment="Stretch"  
                 Margin="0,0,0,0" 
                         Grid.Column="0"
                Background="{StaticResource PlayCanvasSidebar}" 
                Foreground="{StaticResource PlayCanvasWhite}"/>

                <Button Content="Browse..." 
                VerticalAlignment="Center" 
                HorizontalAlignment="Right" 
                Width="80" 
                Margin="10,0,0,0" 
                         Grid.Column="1"
                Command="{Binding BrowseCommand}"
                BorderBrush ="{StaticResource PlayCanvasHighlightOrange}"
                Background="{StaticResource PlayCanvasSidebar}" 
                Foreground="{StaticResource PlayCanvasHighlightOrange}"/>
            </Grid>
            <TextBlock Text="The path to the local git repository." 
                       Margin="0, 0, 0, 0" 
                       IsHitTestVisible="False" 
                       FontSize="10" 
                       Foreground="{StaticResource PlayCanvasSecondaryGray}"/>
            
            <!-- Remote Repository Link-->
            <Label Content="Remote Git Link:" IsEnabled="False" Foreground="{StaticResource PlayCanvasWhite}"/>
            <Grid Margin="0, 0, 0, 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox x:Name="RemoteRepoLinkTextBox" 
                     Text="{Binding RemoteGitUrl, UpdateSourceTrigger=PropertyChanged}" 
                     VerticalScrollBarVisibility="Disabled"
                     IsReadOnly="{Binding IsGitDirectory}"
                     VerticalAlignment="Center" 
                     HorizontalAlignment="Stretch"  
                     Margin="0,0,0,0" 
                     Grid.Column="0"
                     Background="{StaticResource PlayCanvasSidebar}" 
                     Foreground="{StaticResource PlayCanvasWhite}"/>

                <Button Content="Initiate Git" 
                    IsEnabled="False"
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Right" 
                    Width="80" 
                    Margin="10,0,0,0" 
                    Grid.Column="1"
                    Command="{Binding BrowseCommand}"
                    BorderBrush ="{StaticResource PlayCanvasHighlightOrange}"
                    Background="{StaticResource PlayCanvasSidebar}" 
                    Foreground="{StaticResource PlayCanvasHighlightOrange}"/>
            </Grid>
            <TextBlock Text="The link to the remote GitHub repository. Available only when the selected path doesn't have git initiated" 
           Margin="0, 0, 0, 0" 
           IsHitTestVisible="False" 
           FontSize="10" 
           Foreground="{StaticResource PlayCanvasSecondaryGray}"/>

            <!-- Auto fill buttons-->
            <StackPanel Orientation="Horizontal">
                <Button x:Name="AutoFillButton" 
                    Command="{Binding AutoFillCommand}"
                    Margin="0,10,10,0" 
                    Padding="8, 4, 8, 4"
                    Width="100"
                    Height="20"
                    FontSize="8"
                    HorizontalAlignment="Left"
                    BorderBrush ="{StaticResource PlayCanvasHighlightOrange}"
                    Background="{StaticResource PlayCanvasSidebar}" 
                    Foreground="{StaticResource PlayCanvasHighlightOrange}">
                    Auto Fill
                </Button>
                <Button x:Name="SaveAutoFillButton" 
                    Command="{Binding CacheAutoFillCommand}"
                    Margin="0,10,10,0" 
                    Padding="8, 4, 8, 4"
                    Width="100"
                    Height="20"
                    FontSize="8"
                    HorizontalAlignment="Left"
                    BorderBrush ="{StaticResource PlayCanvasHighlightOrange}"
                    Background="{StaticResource PlayCanvasSidebar}" 
                    Foreground="{StaticResource PlayCanvasHighlightOrange}">
                    Cache Data
                </Button>
            </StackPanel>

            <TextBlock Text="Save your inputs to auto-fill fields next time." 
                       Margin="0, 0, 0, 0" 
                       IsHitTestVisible="False" 
                       FontSize="10" 
                       Foreground="{StaticResource PlayCanvasSecondaryGray}"/>
        </StackPanel>

        <!-- Buttons -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="10,20,10,0">
            <Button 
                    Margin="0,0,10,0" 
                    Padding="8, 4, 8, 4"
                    Command="{Binding SyncCommand}"
                    IsEnabled="{Binding IsSyncButtonEnabled}"
                    BorderBrush ="{StaticResource PlayCanvasHighlightOrange}"
                    Background="{StaticResource PlayCanvasSidebar}" 
                    Foreground="{StaticResource PlayCanvasHighlightOrange}">
                Starting Syncing
            </Button>
            <Button 
                    Margin="0,0,10,0" 
                    Padding="8, 4, 8, 4"
                    Command="{Binding IsStopButtonEnabled}"
                    IsEnabled="{Binding IsStopButtonEnabled}"
                    BorderBrush ="{StaticResource PlayCanvasHighlightOrange}"
                    Background="{StaticResource PlayCanvasSidebar}" 
                    Foreground="{StaticResource PlayCanvasHighlightOrange}" ToolTip="Stop the job taking place" IsCancel="True">
                Stop
            </Button>
            <Button x:Name="ClearLogButton" 
                    Click="ClearLogButton_Click"
                    Margin="0,0,10,0" 
                    Padding="8, 4, 8, 4"
                    BorderBrush ="{StaticResource PlayCanvasHighlightOrange}"
                    Background="{StaticResource PlayCanvasSidebar}" 
                    Foreground="{StaticResource PlayCanvasHighlightOrange}">
                Clear Log
            </Button>
            <CheckBox x:Name="DevDebugCheckBox" 
                      Content="Dev mode" 
                      VerticalAlignment="Center"
                      Foreground="{StaticResource PlayCanvasSecondaryGray}"
                      Checked="DevDebugCheckBox_Checked"
                      Unchecked="DevDebugCheckBox_Unchecked"/>
        </StackPanel>

        <!-- Log Label -->
        <Label Grid.Row="2" 
               x:Name="StatusLabel" 
               FontWeight="Bold"
               Margin="10, 20, 0, 0"
               Foreground="{StaticResource PlayCanvasHighlightOrange}">
            Log Window
        </Label>

        <!-- Log ScrollViewer -->
        <ScrollViewer x:Name="LogScrollViewer"
                      Grid.Row="3" 
                      VerticalScrollBarVisibility="Auto" 
                      Background="{StaticResource PlayCanvasSidebar}"
                      Margin="10, 0, 10, 0">
            <TextBlock 
                x:Name="LogTextBlock" 
                TextWrapping="Wrap" 
                Margin="10, 0, 0, 0" 
                Padding="0, 10, 0, 0"
                Text="{Binding LogText, UpdateSourceTrigger=PropertyChanged}"
                
                Foreground="{StaticResource PlayCanvasWhite}"/>
        </ScrollViewer>

        <!-- Footer Label -->
        <Label Grid.Row="4"
               FontSize="9"
               Margin="10, 0, 0, 0"
               HorizontalAlignment="Center"
               Foreground="{StaticResource PlayCanvasSecondaryGray}">
            Developed using .NET and WPF by Ty Radman 2024-2025. All rights reserved.
        </Label>
    </Grid>
</Window>
