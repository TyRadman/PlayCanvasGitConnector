<Window x:Class="PlayCanvasGitConnector.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PlayCanvasGitConnector"
        mc:Ignorable="d"
        Title="MainWindow" Height="500" Width="500">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ColorPallette.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </Window.Resources>

    <Grid Background="{StaticResource PlayCanvasBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- StackPanel for Input -->
        <StackPanel Grid.Row="0" Margin="10, 0, 10, 0">
            <Label Content="API Token:" Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBox x:Name="ApiTokenTextBox" Background="{StaticResource PlayCanvasSidebar}" Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBlock Text="Found in PlayCanvas account settings." 
                       Margin="0, 0, 0, 0" 
                       IsHitTestVisible="False" 
                       FontSize="10" 
                       Foreground="{StaticResource PlayCanvasSecondaryGray}"/>

            <Label Content="Project ID:" Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBox x:Name="ProjectIDTextBox" Background="{StaticResource PlayCanvasSidebar}" Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBlock Text="Found in the browser URL when the project is open in the HUB." 
                       Margin="0, 0, 0, 0" 
                       IsHitTestVisible="False" 
                       FontSize="10" 
                       Foreground="{StaticResource PlayCanvasSecondaryGray}"/>

            <Label Content="Branch ID:" Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBox x:Name="BranchIDTextBox" Background="{StaticResource PlayCanvasSidebar}" Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBlock Text="(Optional) Found in the source control page. Main branch used by default." 
                       Margin="0, 0, 0, 0" 
                       IsHitTestVisible="False" 
                       FontSize="10" 
                       Foreground="{StaticResource PlayCanvasSecondaryGray}"/>

            <Label Content="Scene ID:" Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBox x:Name="SceneIDTextBox" Background="{StaticResource PlayCanvasSidebar}" Foreground="{StaticResource PlayCanvasWhite}"/>
            <TextBlock Text="Found in the browser URL when the scene is open in the editor." 
                       Margin="0, 0, 0, 0" 
                       IsHitTestVisible="False" 
                       FontSize="10" 
                       Foreground="{StaticResource PlayCanvasSecondaryGray}"/>
        </StackPanel>

        <!-- Buttons -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="10,20,10,0">
            <Button x:Name="PushButton" 
                    Click="PushButton_Click" 
                    Margin="0,0,10,0" 
                    Padding="8, 4, 8, 4"
                    BorderBrush ="{StaticResource PlayCanvasHighlightOrange}"
                    Background="{StaticResource PlayCanvasSidebar}" 
                    Foreground="{StaticResource PlayCanvasHighlightOrange}">
                Download and push
            </Button>
            <Button x:Name="StopButton" 
                    Click="StopButton_Click" 
                    Margin="0,0,10,0" 
                    Padding="8, 4, 8, 4"
                    BorderBrush ="{StaticResource PlayCanvasHighlightOrange}"
                    Background="{StaticResource PlayCanvasSidebar}" 
                    Foreground="{StaticResource PlayCanvasHighlightOrange}" ToolTip="Stop the job taking place" IsCancel="True">
                Stop
            </Button>
            <Button x:Name="ClearLogButton" 
                    Click="ClearLogButton_Click" 
                    Margin="0,0,10,0" 
                    Padding="8, 4, 8, 4"
                    BorderBrush ="{StaticResource PlayCanvasHighlightOrange}"
                    Background="{StaticResource PlayCanvasSidebar}" 
                    Foreground="{StaticResource PlayCanvasHighlightOrange}">
                Clear Log
            </Button>
            <CheckBox x:Name="UseEnvVariablesCheckBox" 
                      Content="Use .env file" 
                      VerticalAlignment="Center"
                      Foreground="{StaticResource PlayCanvasSecondaryGray}"
                      Checked="UseEnvVariablesCheckBox_Checked"
                      Unchecked="UseEnvVariablesCheckBox_Unchecked"/>
        </StackPanel>

        <!-- Log Label -->
        <Label Grid.Row="2" 
               x:Name="StatusLabel" 
               FontWeight="Bold"
               Margin="10, 20, 0, 0"
               Foreground="{StaticResource PlayCanvasHighlightOrange}">
            Log
        </Label>

        <!-- Log ScrollViewer -->
        <ScrollViewer x:Name="LogScrollViewer"
                      Grid.Row="3" 
                      VerticalScrollBarVisibility="Auto" 
                      Background="{StaticResource PlayCanvasSidebar}"
                      Margin="10, 0, 10, 0">
            <TextBlock x:Name="LogTextBlock" TextWrapping="Wrap" Margin="10, 0, 0, 0" Foreground="{StaticResource PlayCanvasWhite}"/>
        </ScrollViewer>

        <!-- Footer Label -->
        <Label Grid.Row="4"
               FontSize="9"
               Margin="10, 0, 0, 0"
               HorizontalAlignment="Center"
               Foreground="{StaticResource PlayCanvasSecondaryGray}">
            Developed using .NET and WPF by Ty Radman 2024-2025. All rights reserved.
        </Label>
    </Grid>
</Window>
